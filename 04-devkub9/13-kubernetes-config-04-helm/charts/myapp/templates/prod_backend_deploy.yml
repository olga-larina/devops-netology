{{- if eq .Values.app.env "prod" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backend
  name: backend
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          name: {{ .Values.backend.name }}
          env:
            - name: DATABASE_URL
              value: "{{ .Values.backend.dbUrl }}"
          volumeMounts:
            - mountPath: "/static-back"
              name: prod-backend-volume
      initContainers:
        - name: init-{{ .Values.backend.name }}
          image: {{ .Values.backend.init.image }}
          command: [ 'sh', '-c', "until nslookup {{ .Values.backend.init.svc }}; do echo waiting for {{ .Values.backend.init.svc }}; sleep 2; done" ]
      terminationGracePeriodSeconds: 30
      volumes:
        - name: prod-backend-volume
          persistentVolumeClaim:
            claimName: prod-pvc
{{- end }}
